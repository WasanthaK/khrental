name: Deploy to Azure Web App

on:
  push:
    branches: [ master ]
    paths:
      - '**'
      - '!.github/workflows/webhook-deploy.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Install Terser
      run: npm install terser --save-dev

    - name: Create .env file for build
      run: |
        echo "Creating .env file for main application..."
        touch .env
        echo "VITE_SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
        echo "VITE_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env
        echo "VITE_EVIA_SIGN_CLIENT_ID=${{ secrets.EVIA_SIGN_CLIENT_ID }}" >> .env
        echo "VITE_EVIA_SIGN_CLIENT_SECRET=${{ secrets.EVIA_SIGN_CLIENT_SECRET }}" >> .env
        echo "VITE_API_ENDPOINT=${{ secrets.API_ENDPOINT }}" >> .env
        echo "VITE_WEBHOOK_URL=${{ secrets.WEBHOOK_URL }}" >> .env
        echo ".env file created with required variables"

    - name: Build and test
      run: |
        npm run build
        npm run test

    - name: List all files (including dotfiles)
      run: |
        echo "Listing all files including dotfiles:"
        ls -la
        echo "Checking for specific dotfiles:"
        find . -type f -name ".*" | sort
        echo "Checking .env file status:"
        if [ -f ".env" ]; then echo ".env exists"; else echo ".env doesn't exist"; fi

    - name: Zip artifact for deployment
      run: |
        # Make sure dotfiles are included
        echo "Creating zip with all files including dotfiles..."
        zip -r release.zip . -x "node_modules/*" "*.git*"

    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: release.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app
        path: .

    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'khrental'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_1234567890 }}

    - name: Notify on successful deployment
      run: |
        echo "Deployment to Azure Web App completed successfully!"
        echo "Application URL: https://khrental.azurewebsites.net"
