name: Build and deploy Node.js app to Azure Web App - khrental

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      VITE_EVIA_SIGN_CLIENT_ID: ${{ secrets.EVIA_SIGN_CLIENT_ID }}
      VITE_EVIA_SIGN_CLIENT_SECRET: ${{ secrets.EVIA_SIGN_CLIENT_SECRET }}
      VITE_API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
      VITE_WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: npm install and build
        run: |
          npm install
          npm install terser --save-dev
          # Create .env file for build
          echo "VITE_SUPABASE_URL=$VITE_SUPABASE_URL" > .env
          echo "VITE_SUPABASE_ANON_KEY=$VITE_SUPABASE_ANON_KEY" >> .env
          echo "VITE_EVIA_SIGN_CLIENT_ID=$VITE_EVIA_SIGN_CLIENT_ID" >> .env
          echo "VITE_EVIA_SIGN_CLIENT_SECRET=$VITE_EVIA_SIGN_CLIENT_SECRET" >> .env
          echo "VITE_API_ENDPOINT=$VITE_API_ENDPOINT" >> .env
          echo "VITE_WEBHOOK_URL=$VITE_WEBHOOK_URL" >> .env
          npm run build

      - name: Create deployment package
        run: |
          mkdir -p deploy
          cp -r dist/* deploy/
          
          # Create runtime environment file
          echo "VITE_SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > deploy/.env
          echo "VITE_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> deploy/.env
          echo "VITE_EVIA_SIGN_CLIENT_ID=${{ secrets.EVIA_SIGN_CLIENT_ID }}" >> deploy/.env
          echo "VITE_EVIA_SIGN_CLIENT_SECRET=${{ secrets.EVIA_SIGN_CLIENT_SECRET }}" >> deploy/.env
          echo "VITE_API_ENDPOINT=${{ secrets.API_ENDPOINT }}" >> deploy/.env
          echo "VITE_WEBHOOK_URL=${{ secrets.WEBHOOK_URL }}" >> deploy/.env
          
          # Create startup script
          echo '#!/bin/bash' > deploy/startup.sh
          echo 'cd /home/site/wwwroot' >> deploy/startup.sh
          echo 'npm install -g serve' >> deploy/startup.sh
          echo 'serve -s . -l 8080' >> deploy/startup.sh
          chmod +x deploy/startup.sh
          
          # Create web.config
          echo '<?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="StaticFileModuleHtml" path="*.html" verb="*" modules="StaticFileModule" resourceType="File" requireAccess="Read" />
                <add name="StaticFileModuleJs" path="*.js" verb="*" modules="StaticFileModule" resourceType="File" requireAccess="Read" />
                <add name="StaticFileModuleCss" path="*.css" verb="*" modules="StaticFileModule" resourceType="File" requireAccess="Read" />
              </handlers>
              <rewrite>
                <rules>
                  <rule name="React Routes" stopProcessing="true">
                    <match url=".*" />
                    <conditions logicalGrouping="MatchAll">
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                      <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                    </conditions>
                    <action type="Rewrite" url="/" />
                  </rule>
                </rules>
              </rewrite>
            </system.webServer>
          </configuration>' > deploy/web.config
          
          # Create custom startup command file
          echo 'CUSTOM_STARTUP_COMMAND="/home/site/wwwroot/startup.sh"' > deploy/startup.txt

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deploy/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: deploy/

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_EEDC2329EBDE4906AAD5DBEFBDBD8982 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B76BB5BB72494662B2E55987D0F9FEC7 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_62093CB513E141DEBC62ACAB8F0862DB }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'khrental'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_1234567890 }}
          package: .
          startup-command: '/home/site/wwwroot/startup.sh'
