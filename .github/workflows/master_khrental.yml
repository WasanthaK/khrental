name: Build and deploy Node.js app to Azure Web App - khrental

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      VITE_EVIA_SIGN_CLIENT_ID: ${{ secrets.VITE_EVIA_SIGN_CLIENT_ID }}
      VITE_EVIA_SIGN_CLIENT_SECRET: ${{ secrets.VITE_EVIA_SIGN_CLIENT_SECRET }}
      VITE_API_ENDPOINT: ${{ secrets.VITE_API_ENDPOINT }}
      VITE_WEBHOOK_URL: ${{ secrets.VITE_WEBHOOK_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install and build project
        run: |
          npm install
          npm install terser --save-dev
          # Create .env file
          echo "VITE_SUPABASE_URL=$VITE_SUPABASE_URL" > .env
          echo "VITE_SUPABASE_ANON_KEY=$VITE_SUPABASE_ANON_KEY" >> .env
          echo "VITE_EVIA_SIGN_CLIENT_ID=$VITE_EVIA_SIGN_CLIENT_ID" >> .env
          echo "VITE_EVIA_SIGN_CLIENT_SECRET=$VITE_EVIA_SIGN_CLIENT_SECRET" >> .env
          echo "VITE_API_ENDPOINT=$VITE_API_ENDPOINT" >> .env
          echo "VITE_WEBHOOK_URL=$VITE_WEBHOOK_URL" >> .env
          npm run build

      - name: Verify build output
        run: |
          echo "Verifying build output..."
          if [ ! -d "dist" ]; then
            echo "Build output directory 'dist' not found!"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "Build output file 'dist/index.html' not found!"
            exit 1
          fi
          echo "Build output verified successfully."

      - name: Prepare deployment files
        run: |
          # Use a writable directory for the web root
          WEB_ROOT=/home/runner/work/khrental/webroot
          mkdir -p "$WEB_ROOT"
      
          # Create startup script
          cat << 'EOF' > startup.sh
          #!/bin/bash
          set -e  # Exit immediately if a command exits with a non-zero status
          cd ${WEB_ROOT}
          EOF
          chmod +x startup.sh
      
          # Create web.config
          cat << 'EOF' > web.config
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="StaticFileModuleHtml" path="*.html" verb="*" modules="StaticFileModule" resourceType="File" requireAccess="Read" />
                <add name="StaticFileModuleJs" path="*.js" verb="*" modules="StaticFileModule" resourceType="File" requireAccess="Read" />
                <add name="StaticFileModuleCss" path="*.css" verb="*" modules="StaticFileModule" resourceType="File" requireAccess="Read" />
              </handlers>
              <rewrite>
                <rules>
                  <rule name="React Routes" stopProcessing="true">
                    <match url=".*" />
                    <conditions logicalGrouping="MatchAll">
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                      <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                    </conditions>
                    <action type="Rewrite" url="/" />
                  </rule>
                </rules>
              </rewrite>
            </system.webServer>
          </configuration>
          EOF
      
          # Copy build files
          cp -r dist/* "$WEB_ROOT"

      - name: Upload deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: |
            ./*
            startup.sh
            web.config
            !node_modules
            !src
            !.git

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Download deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: .

      - name: Verify deployment files
        run: |
          echo "Checking deployment files:"
          ls -la
          echo "Ensuring startup script is executable:"
          chmod +x startup.sh

      - name: Debug startup script
        run: bash -x startup.sh

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_EEDC2329EBDE4906AAD5DBEFBDBD8982 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B76BB5BB72494662B2E55987D0F9FEC7 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_62093CB513E141DEBC62ACAB8F0862DB }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'khrental'
          slot-name: 'Production'
          package: .
          startup-command: '/home/site/wwwroot/startup.sh'

      - name: Set environment variables in Azure
        run: |
          az webapp config appsettings set \
            --name khrental \
            --resource-group khrental \
            --settings \
            VITE_SUPABASE_URL="${{ secrets.VITE_SUPABASE_URL }}" \
            VITE_SUPABASE_ANON_KEY="${{ secrets.VITE_SUPABASE_ANON_KEY }}" \
            VITE_EVIA_SIGN_CLIENT_ID="${{ secrets.VITE_EVIA_SIGN_CLIENT_ID }}" \
            VITE_EVIA_SIGN_CLIENT_SECRET="${{ secrets.VITE_EVIA_SIGN_CLIENT_SECRET }}" \
            VITE_API_ENDPOINT="${{ secrets.VITE_API_ENDPOINT }}" \
            VITE_WEBHOOK_URL="${{ secrets.VITE_WEBHOOK_URL }}"

      - name: Verify deployment
        run: |
          echo "Waiting for deployment to stabilize..."
          sleep 30
          echo "Deployment verification complete."